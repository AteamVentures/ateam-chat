# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-08-12 16:26
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required. Letters, digit and _ only', max_length=32, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(32), django.core.validators.RegexValidator('^(?!_)[a-zA-Z0-9_]+$', 'Enter alphabet, digits and _ only', 'invalid')], verbose_name='username')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('display_name', models.CharField(blank=True, max_length=20, verbose_name='display name')),
                ('email', models.EmailField(db_index=True, max_length=190, verbose_name='email')),
                ('phone', models.CharField(db_index=True, max_length=30, validators=[django.core.validators.RegexValidator('^[0-9]+$', 'Only numbers available', 'invalid')], verbose_name='user phone number')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='joined date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
